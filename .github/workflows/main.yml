name: ci-cd

on:
  push:
    branches:
      - main
      - dev
      - newStuff

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt || true
          pip install pyinstaller

      - name: Run unit tests
        run: |
          python -m unittest discover -s . -p "tests.py"

      - name: Build executable (.exe)
        run: |
          pyinstaller --onefile main.py
        working-directory: .

      - name: Upload executable as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-exe
          path: dist/main.exe

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push all Docker images using Docker Compose
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          # Использует docker-compose.yaml для определения всех образов и их путей
          # Предполагается, что в docker-compose.yaml есть секции 'build' для каждого сервиса
          builder: ${{ steps.buildx.outputs.name }} 
          file: docker-compose.yaml
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download built .exe
        uses: actions/download-artifact@v4
        with:
          name: app-exe
          path: ./build-output

      - name: SSH deploy .exe to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "./build-output/main.exe"
          target: "/home/${{ secrets.SERVER_USER }}/app/main.exe"

      - name: Restart app on server
        uses: appleboy/ssh-action@v1.6.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            pkill -f main.exe || true
            nohup ./app/main.exe > app.log 2>&1 &
