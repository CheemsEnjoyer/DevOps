name: Microservices CI/CD Pipeline

on:
  push:
    branches: [main, dev, newStuff]

jobs:
  build-job:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-buildx-action@v3
    - uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - run: |
        export DOCKER_USERNAME=${{ vars.DOCKER_USERNAME }}
        docker compose build
        docker compose push

  merge-job:
    runs-on: ubuntu-latest
    needs: build-job
    if: github.ref == 'refs/heads/dev'
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    - run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"

        git fetch origin main:main
        git checkout main

        git merge dev --no-ff -m "Auto-merge: dev to main"
        git push origin main

  deploy-job:
    runs-on: ubuntu-latest
    needs: build-job
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22
        script: |
          set -e
          DOCKER_USERNAME="${{ vars.DOCKER_USERNAME }}"
          PROJECT_DIR="/opt/devops-project"
 
          apt update && apt install -y git
          systemctl start docker && systemctl enable docker

          mkdir -p $PROJECT_DIR
          cd $PROJECT_DIR

          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u $DOCKER_USERNAME --password-stdin

          if [ -d .git ]; then
            git pull
          else
            git clone https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} .
          fi

          export DOCKER_USERNAME
          docker compose down
          docker compose pull
          docker compose up -d
